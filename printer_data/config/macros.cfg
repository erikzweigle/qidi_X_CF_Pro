[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
  # Capture values passed from the slicer: bed temp, extruder temp, chamber temp
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}

  # Home all axes
  BED_MESH_CLEAR
  G28                                                         # Home XYZ
  Z_TILT_ADJUST                                               # Z level
  

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if target_bed > 90 %}
    M190 S{target_bed}                                                              # Set the target temp for the bed
    G4 P300000                                                                      # Give 5 minutes for chamber to heat soak
    BED_MESH_PROFILE LOAD=full_abs                                                  # Load bed mesh hi temp
    G28 Z                                                                           # Home Z
    G90                                                                             # Absolute positioning

  # If the bed temp is not over 90c, heat the bed to the desired temp, and then begin
  {% else %}
    M190 S{target_bed}
    BED_MESH_PROFILE LOAD=full_pla
    G28 Z
    G90                                                                             # Absolute positioning
  {% endif %}

  # Heat the nozzle
  # BED_MESH_CLEAR                                                
  # BED_MESH_CALIBRATE ADAPTIVE=1                               # KAMP Bed mesh takes longer than 30 seconds, no need to pause  
  SMART_PARK                                                    # KAMP near object start
  M107                                                          # Turn off fans
  M109 S{target_extruder}                                       # Heat the nozzle to printing temp

  # Start printing
  LINE_PURGE                                                    # KAMP 12 mm^3/s in front of object
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-8.0 F3600                 ; retract filament far enough to do nEXT G nozzle change while cool

    {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
    {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}

    #   Provide clearance to part
    G0 X{x_center} Y{y_center} F20000  ; move nozzle to remove stringing
    G28 Z F3600                    ; move bed down
    TURN_OFF_HEATERS
    BED_MESH_CLEAR
    M107                           ; turn off fans
    M84                            ; disable motors

[gcode_macro CHOME]
description: Homes XYZ axis only if printer is in a non-homed state
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}

[gcode_macro UNLOAD_FILAMENT]
description: Unloads filament from toolhead
gcode:
  {% set EXTRUDER_TEMP = params.TEMP|default(230)|int %}
  CHOME
  G1 Z20                      ; move nozzle away
  # FRONT                       ; move the toolhead to the front
  M109 S{EXTRUDER_TEMP}       ; heat up the hotend
  M83                         ; set extruder to relative mode
  G1 E-8 F1800                ; quickly retract a small amount to elimate stringing
  G4 P200                     ; pause for a short amount of time
  G1 E-50 F300                ; retract slowly the rest of the way
  G1 E-20 F300
  M400                        ; wait for moves to finish
  M117 Unload Complete!

[gcode_macro LOAD_FILAMENT]
description: Loads new filament into toolhead
gcode:
  {% set EXTRUDER_TEMP = params.TEMP|default(230)|int %}
  FRONT                       ; move the toolhead to the front
  M109 S{EXTRUDER_TEMP}       ; heat up the hotend
  M83                         ; set extruder to relative mode
  G1 E50 F300                 ; extrude slowly
  G1 E50 F300
  M400                        ; wait for moves to finish
  M117 Load Complete!

[gcode_macro CENTER]
description: Moves the toolhead to the center
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G90
  G1 X{x_center} Y{x_center} F7800

[gcode_macro FRONT]
description: Moves the toolhead to the front
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G90
  G1 X{x_center} Y10 F7800

[gcode_macro NOZZLE_PURGE]
description: Draw a purge line at the front left edge of the build plate
gcode:
  CHOME
  G0 X2.5 Y4 F3000 ; Go to front
  G0 Z0.15 ; Drop to bed
  M83 ; Set extruder to relative mode
  G1 X45 E15 F500 ; Extrude 25mm of filament in a 4cm line
  G1 E-0.5 F400 ; Retract a little
  G1 X85 F4000 ; Quickly wipe away from the filament line
  G1 Z0.3 ; Raise and begin printing.

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on steppers during homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    SAVE_GCODE_STATE NAME=STATE_HOME_X

    # Home
    G28 X

    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    RESTORE_GCODE_STATE NAME=STATE_HOME_X

[gcode_macro _HOME_Y]
gcode:
    # Set current for homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    SAVE_GCODE_STATE NAME=STATE_HOME_Y

    # Home
    G28 Y

    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    RESTORE_GCODE_STATE NAME=STATE_HOME_Y

[homing_override]
axes: xyz
set_position_z: 0
gcode:
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
    SAVE_GCODE_STATE NAME=STATE_HOME_OVERRIDE

    # Home Z first, to avoid any situation where the nozzle might scrape the bed
    {% if home_all or 'Z' in params %}
        G28 Z
        #G91 Z     #relative positioning
        #G90 Z     #absolute positioning
    {% endif %}

   {% if home_all or 'Y' in params %}
        _HOME_Y
    {% endif %}

    {% if home_all or 'X' in params %}
        _HOME_X
    {% endif %}
    
    # G90
    # G0 X150 Y125 Z150 F3600 # move to bed center
    RESTORE_GCODE_STATE NAME=STATE_HOME_OVERRIDE



# [firmware_retraction]
# retract_length: 0.5
# retract_speed: 40
# unretract_extra_length: 0
# unretract_speed: 40



# [gcode_macro SET_ACTIVE_SPOOL]
# gcode: {% if  %} {% set id = params.ID|int %} {action_call_remote_method( "spoolman_set_active_spool", spool_id=id )} {% else %} {action_respond_info("Parameter 'ID' is required")} {% endif %}
# [gcode_macro CLEAR_ACTIVE_SPOOL]
# gcode: {action_call_remote_method( "spoolman_set_active_spool", spool_id=None )}params.IDhttp://192.168.196.183:7912

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True   ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 10.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 10.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 100.0  ; custom dz value; the value in mm to lower the bed when moving to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 8.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 40.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 40.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 150  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 150  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False  ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
#                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
# !!! Custom macros, please use with care and review the section of the corresponding macro.
# These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
# Only  single line commands are supported, please create a macro if you need more than one command.
variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:


[gcode_macro BLTOUCH_DEPLOY]
gcode:
  BLTOUCH_DEBUG COMMAND=pin_down

[gcode_macro BLTOUCH_RETRACT]
gcode:
  BLTOUCH_DEBUG COMMAND=pin_up

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c $0"
timeout: 90.0
verbose: True